---
openapi: 3.0.1
info:
  title: Digiftng API
  description: This is the API Documentation for [Digiftng](https://www.digiftng.com/)
  version: v1

servers:
  - url: https://{defaultHost}.com
    description: this is the default url the API e.g. Main (production) server
    variables:
      defaultHost:
        default: api.digiftng

  - url: http://localhost
    description: Optional server description, e.g. Internal staging server for testing

paths:
  "/api/v1/available-giftcards":
    get:
      summary: Fetches a list of available giftcards (Web)
      tags:
        - Giftcards
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: The search query parameter for available giftcards.
        - in: query
          name: min_price
          schema:
            type: string
          required: false
          description: The minimum price filteration range parameter for available giftcards.
        - in: query
          name: max_price
          schema:
            type: string
          required: false
          description: The maximum price filteration range parameter for available giftcards.
        - in: query
          name: category
          schema:
            type: string
            example: "1,2,3"
          required: false
          description: this is used to get a list of category
      responses:
        "200":
          $ref: "#/components/responses/GiftCards"

        "400":
          description: fetch gift card failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

    post:
      summary: Fetches a list of available giftcards (API)
      tags:
        - Giftcards
      parameters:
        - in: header
          name: x-auth-apikey
          schema:
            type: string
            example: sk_live_f9f715e06b9xxxxxxxxxxxxxxx61a73f
          required: true
      responses:
        "200":
          description: available giftcards
          # content:
          #   application/json:
          #     schema:
          $ref: "#/components/responses/GiftCards"
        "400":
          description: fetch gift card failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/available-giftcards/local":
    get:
      summary: Fetches a list of available local giftcards (Web)
      tags:
        - Giftcards
      responses:
        "200":
          $ref: "#/components/responses/GiftCards-local"
        "400":
          description: fetch gift card failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

    post:
      summary: Fetches a list of available local giftcards (API)
      tags:
        - Giftcards
      parameters:
        - in: header
          name: x-auth-apikey
          schema:
            type: string
            example: sk_live_f9f715e06b9xxxxxxxxxxxxxxx61a73f
          required: true
      responses:
        "200":
          description: available giftcards
          # content:
          #   application/json:
          #     schema:
          $ref: "#/components/responses/GiftCards-local"
        "400":
          description: fetch gift card failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      # requestBody:
      #   description: API for gift cards
      #   $ref: "#/components/requestBodies/GiftCards"

  "/api/v1/gift-cards/send":
    post:
      summary: Send a giftcard request
      tags:
        - Giftcards
      parameters:
        - in: header
          name: x-auth-apikey
          schema:
            type: string
            example: sk_live_f9f715e06b9xxxxxxxxxxxxxxx61a73f
          required: true
      responses:
        "200":
          description: this endpoint is to purchase giftcard via API
          $ref: "#/components/responses/BoughtGiftCards"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    action:
                      type: string
                      example: order
                    # apikey:
                    #   type: string
                    #   example: 1f8c60995982dcc733c707ca36a2472b
                    from:
                      type: string
                      example: "0787764444566"
                    sender:
                      type: string
                      example: A Business Name
                    postal:
                      type: string
                      example: "1001020"
                    address:
                      type: string
                      example: "A valid US address"
                    msg:
                      type: string
                      example: Thanks for doing business with us
                    card:
                      type: object
                      properties:
                        code:
                          type: string
                          example: "62"
                        amount:
                          type: integer
                          example: 100
                        dest:
                          type: string
                          example: beneficiary@receiver.com
                        order_id:
                          type: string
                          example: 2d931510-d99f-494a-8c67-87feb05e1594
              required:
                - data
  "/api/v1/gift-cards/send_retail":
    post:
      summary: this endpoint is to purchase giftcard via web app
      tags:
        - Giftcards
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      responses:
        "200":
          description: Currently signed in user
          $ref: "#/components/responses/Success"
        "400":
          description: user logout failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    action:
                      type: string
                      example: order
                    from:
                      type: string
                      example: "0787764444566"
                    sender:
                      type: string
                      example: DigiftNG
                    postal:
                      type: string
                      example: "1001020"
                    address:
                      type: string
                      example: "A valid US address"
                    msg:
                      type: string
                      example: Thanks for doing business with us
                    "reference":
                      type: string
                      example: 1g31510-d99f-494a-8c67-87feb05e1594
                    card:
                      type: object
                      properties:
                        code:
                          type: string
                          example: "62"
                        amount:
                          type: integer
                          example: 100
                        dest:
                          type: string
                          example: beneficiary@receiver.com
                        order_id:
                          type: string
                          example: 2d931510-d99f-494a-8c67-87feb05e1594
              required:
                - data

  "/api/v1/gift-cards/send_retail/cart":
    post:
      summary: this endpoint is to purchase giftcard via web app via the cart
      tags:
        - Giftcards
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      responses:
        "200":
          description: Currently signed in user
          $ref: "#/components/responses/Success"
        "400":
          description: user logout failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    action:
                      type: string
                      example: order
                    from:
                      type: string
                      example: "0787764444566"
                    sender:
                      type: string
                      example: DigiftNG
                    postal:
                      type: string
                      example: "1001020"
                    address:
                      type: string
                      example: "A valid US address"
                    msg:
                      type: string
                      example: Thanks for doing business with us
                    "reference":
                      type: string
                      example: 1g31510-d99f-494a-8c67-87feb05e1594
                    "cart":
                      type: string
                      example: 38e3cb3f-c8d6-405a-b949-61a0ce32f267
              required:
                - data
  "/api/v1/gift-cards/send_tmp_retail":
    post:
      summary: this endpoint is to purchase giftcard via web app for a temp user
      tags:
        - Giftcards
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"

      responses:
        "200":
          description: giftcard sent
          $ref: "#/components/responses/BoughtGiftCards"
        "400":
          description: send_retail failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    action:
                      type: string
                      example: order
                    from:
                      type: string
                      example: "0787764444566"
                    sender:
                      type: string
                      example: DigiftNG
                    postal:
                      type: string
                      example: "1001020"
                    address:
                      type: string
                      example: "A valid US address"
                    msg:
                      type: string
                      example: Thanks for doing business with us
                    "reference":
                      type: string
                      example: 1g31510-d99f-494a-8c67-87feb05e1594
                    card:
                      type: object
                      properties:
                        code:
                          type: string
                          example: "62"
                        amount:
                          type: integer
                          example: 100
                        dest:
                          type: string
                          example: beneficiary@receiver.com
                        order_id:
                          type: string
                          example: 2d931510-d99f-494a-8c67-87feb05e1594
              required:
                - data

  "/api/v1/generate-transaction-reference":
    post:
      summary: this is to generate a token to purchase a single gift card
      tags:
        - Giftcards
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack, cart_id is only required for carts
          $ref: "#/components/responses/TransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 5000
                card_code:
                  type: string
                  example: 62

  "/api/v1/generate-transaction-reference/cart":
    post:
      summary: this is to generate a reference to purchase a multiple gift card via cart
      tags:
        - Giftcards
      parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack, cart_id is only required for carts
          $ref: "#/components/responses/TransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 5000
                card_code:
                  type: string
                  example: 62;200
                cart_id:
                  type: string
                  example:

  "/api/v1/generate-transaction-reference/airtime":
    post:
      summary: this is to generate a reference to purchase airtime
      tags:
        - Airtime
      parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack, cart_id is only required for carts
          $ref: "#/components/responses/TransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 5000
                card_code:
                  type: string
                  example: airtime

  "/api/v1/generate-transaction-reference/cabletv":
    post:
      summary: this is to generate a reference for cable tv subscription
      tags:
        - Cable Tv
      parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack, cart_id is only required for carts
          $ref: "#/components/responses/TransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 5000
                card_code:
                  type: string
                  example: airtime

  "/api/v1/generate-transaction-reference/electricbill":
    post:
      summary: this is to generate a reference for electric utiliy
      tags:
        - Electric Bill
      parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack, cart_id is only required for carts
          $ref: "#/components/responses/TransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 5000
                card_code:
                  type: string
                  example: airtime

  "/api/v1/generate-transaction-reference/epin":
    post:
      summary: this is to generate a reference for electric utiliy
      tags:
        - E-Pin Service
      parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack, cart_id is only required for carts
          $ref: "#/components/responses/TransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 5000
                card_code:
                  type: string
                  example: epin

  "/api/v1/generate-tmp-transaction-reference":
    post:
      summary: this is to generate a token to purchase a single gift card for a temp user
      tags:
        - Giftcards
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack
          $ref: "#/components/responses/TransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 5000
                card_code:
                  type: string
                  example: 62

  "/api/v1/verify-transaction-reference":
    post:
      summary: this endpoint is called to verify payment to  vendor for gift cards
      tags:
        - Giftcards
        - Airtime
        - Cable Tv
        - "Electric Bill"
      # parameters:
      #   - in: path
      #     name: id   # Note the name is the same as in the path
      #     required: true
      #     schema:
      #       type: integer
      #       minimum: 1
      #     description: The user ID
      responses:
        "200":
          description: this endpoint verifies that a payment was successful
          $ref: "#/components/responses/VerifyTransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reference:
                  type: string
                  example: 1g31510-d99f-494a-8c67-87feb05e1594
                transaction_id:
                  type: integer
                  example: 3117529

  "/api/v1/generate-fundwallet-reference":
    post:
      summary: this is to generate a token to fund wallet for a  business user
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        
      responses:
        "200":
          description: this endpoint generates a reference
          $ref: "#/components/responses/TransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 5000

  "/api/v1/verify-fundwallet-reference":
    post:
      summary: this endpoint is called to verify payment to  vendor for gift cards
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"

      responses:
        "200":
          description: this endpoint verifies that a payment was successful
          $ref: "#/components/responses/VerifyTransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reference:
                  type: string
                  example: 1g31510-d99f-494a-8c67-87feb05e1594
                transaction_id:
                  type: integer
                  example: 3117529

  "/api/v1/cancel-transaction-reference/paystack":
    post:
      summary: this endpoint is called to cancel payment to vendor for gift cards
      tags:
        - Giftcards
      # parameters:
      #   - in: path
      #     name: id   # Note the name is the same as in the path
      #     required: true
      #     schema:
      #       type: integer
      #       minimum: 1
      #     description: The user ID
      responses:
        "200":
          description: this endpoint cancel payment for gift card was successful
          $ref: "#/components/responses/CancelTransactionReference"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reference:
                  type: string
                  example: 1g31510-d99f-494a-8c67-87feb05e1594

  "/auth/register/business":
    post:
      summary: Creates a business user
      tags:
        - Users
      parameters: []
      responses:
        "200":
          description: business created
          $ref: "#/components/responses/Registration"
        "400":
          description: business registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                "phone_number":
                  type: string
                  example: "+23470xxxxxxxx"
                email:
                  type: string
                  example: example@email.com
                password:
                  type: string
                  example: "123456"
                password_confirmation:
                  type: string
                  example: "123456"
                first_name:
                  type: string
                  example: Seun
                last_name:
                  type: string
                  example: Ezike
                business_name:
                  type: string
                  example: Digift Nigeria Ltd
                industry:
                  type: string
                  example: tech
                country:
                  type: string
                  example: Nigeria
                staff_strength:
                  type: string
                  example: 1-5
                role:
                  type: string
                  example: owner
                website:
                  type: string
                  example: digiftng.com
                registration_status:
                  type: string
              required:
                - email
                - password
                - password_confirmation
                - business_name
                - country

  "/auth/register/personal":
    post:
      summary: Creates a personal user
      tags:
        - Users
      parameters: []
      responses:
        "200":
          description: user created
          $ref: "#/components/responses/Registration"
        "400":
          description: personal registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                "phone_number":
                  type: string
                  example: "+23470xxxxxxxx"
                email:
                  type: string
                  example: example@email.com
                password:
                  type: string
                  example: "123456"
                password_confirmation:
                  type: string
                  example: "123456"
                first_name:
                  type: string
                  example: Seun
                last_name:
                  type: string
                  example: Ezike
              required:
                - email
                - password
                - password_confirmation

  "/auth/sign_in":
    post:
      summary: Sign in user
      tags:
        - Users
      parameters: []
      responses:
        "200":
          description: this is the endpoint to login a User, please add the return headers to your subsequent
          $ref: "#/components/responses/Login"
          headers:
            access-token:
              schema:
                type: string
              description: access-token for making request from the webapp.
            client:
              schema:
                type: string
              description: this is the client browser.
            uid:
              schema:
                type: string
              description: this is the uid for the currently logged in user.
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: example@email.com
                password:
                  type: string
                  example: "123456"
              required:
                - email
                - password

  "/admin_auth/sign_out":
    delete:
      summary: Sign out Admin
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      responses:
        "200":
          description: Currently signed out Admin
          $ref: "#/components/responses/Success"
        "400":
          description: user logout failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/auth/sign_out":
    delete:
      summary: Sign out user
      tags:
        - Users
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      responses:
        "200":
          description: Currently signed in user
          $ref: "#/components/responses/Success"
        "400":
          description: user logout failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/auth/me":
    get:
      summary: Get currently signed in user
      tags:
        - Users
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      responses:
        "200":
          description: Currently signed in user
          $ref: "#/components/responses/UserDetails"
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/auth/settings":
    patch:
      summary: Update currently signed in user
      tags:
        - Users
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: example@email.com
                "data":
                  type: object
                  properties:
                    "profile":
                      type: object
                      properties:
                        "first_name":
                          type: string
                          example: "Inno"
                        "last_name":
                          type: string
                          example: "Onye"
                        "phone_number":
                          type: string
                          example: "123124231543"
                        "image":
                          type: string
                          example: "fytfcvyhjbgbuhgvyvhjvjhvjh"
                        bvn:
                          type: string
                          example: "12321245673"
                        is_verified:
                          type: boolean
                          example: false
                    "business":
                      type: object
                      properties:
                        "business_name":
                          type: string
                          example: "random business_name"
                        "industry":
                          type: "string"
                        "country_of_incorporation":
                          type: "string"
                        "staff_strength":
                          type: number
                          example: 10
                        "registration_status":
                          type: "string"
                        "role_at_business":
                          type: "string"
                        "website":
                          type: "string"
              required:
                - email
      responses:
        "200":
          description: Currently Update signed in user
          $ref: "#/components/responses/Update"
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/auth/password":
    put:
      summary: Update currently signed in user passwword
      tags:
        - Users
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
                - password
                - password_confirmation
      responses:
        "200":
          description: Currently Update signed in user
          $ref: "#/components/responses/Update"
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/fetch-send-transactions":
    get:
      summary: fetch all send gift card transactions
      tags:
        - Transactions
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to goto, default is 1
        - in: query
          name: per_page
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: currently signed in user's send giftcard transactions
          $ref: "#/components/responses/SendGiftCardTransactions"
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/business/go-live":
    patch:
      summary: this endpoint is to update a business live status
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    test_mode:
                      type: boolean
                      example: true
                  required:
                    - test_mode
      responses:
        "200":
          description: currently updated user
          $ref: "#/components/responses/UserDetails"
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/business/wallet":
    get:
      summary: this endpoint returns a business wallet
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           data:
      #             type: object
      #             properties:
      #               test_mode:
      #                 type: boolean
      #                 example: true
      #             required:
      #               - test_mode
      responses:
        "200":
          description: currently updated user business entity wallets
          $ref: "#/components/responses/BusinessWalletDetails"
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"







  "/api/v1/business/custom/giftcards":
    get:
      summary: Fetches a list of available giftcards created by business
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      responses:
        "200":
          $ref: "#/components/responses/GiftCards"

        "400":
          description: fetch gift card failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

    post:
      summary: Create Business giftcards
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        # - in: header
        #   name: x-auth-apikey
        #   schema:
        #     type: string
        #     example: sk_live_f9f715e06b9xxxxxxxxxxxxxxx61a73f
        #   required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                 data: 
                  type: object
                  properties:
                    "caption": 
                      type: string
                    "color": 
                      type: string

                    "desc": 
                      type: string
                    "disclosures": 
                      type: string
                    "discount": 
                      type: integer 
                      example: 0.00,
                    "fontcolor": 
                      type: string 
                    "max_range": 
                      type: number 
                      example: 10000
                    "min_range": 
                      type: number 
                      example: 500
                    "values": 
                      type: string
                      example: "[500, 1000, 5000, 10000]"
                    "is_disabled": 
                      type: boolean
                      example: false
                    logo:
                      type: string
                      format: base64

          multipart/form-data:
            schema:
              type: object
              properties: # Request parts
                data: 
                  type: object
                  properties:
                    # id:
                    #   type: string
                    #   format: uuid
                    "caption": 
                      type: string
                    "color": 
                      type: string
                    "desc": 
                      type: string
                    "disclosures": 
                      type: string
                    "discount": 
                      type: integer 
                      example: 0.00,
                    "fontcolor": 
                      type: string 
                    "max_range": 
                      type: number 
                      example: 10000
                    "min_range": 
                      type: number 
                      example: 500
                    "is_disabled": 
                      type: boolean
                      example: false
                    "values": 
                      type: string
                      example: "[500, 1000, 5000, 10000]"


                logo:
                  type: string
                  format: base64
            encoding: # The same level as schema
              logo: # Property name (see above)
                contentType: image/png, image/jpeg, image/*
      responses:
        "200":
          description: response from creating business giftcards
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null
                      
                  message:
                    type: string
                    example: "created gift caqrd"
                  errMessage:
                    type: string
                    example: null
          # content:
          #   application/json:
          #     schema:
          # $ref: "#/components/responses/GiftCards"
        "400":
          description: create gift card failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"



    put:
      summary: Update Business giftcards Details
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        # - in: header
        #   name: x-auth-apikey
        #   schema:
        #     type: string
        #     example: sk_live_f9f715e06b9xxxxxxxxxxxxxxx61a73f
        #   required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                 data: 
                  type: object
                  properties:
                    "caption": 
                      type: string
                    "color": 
                      type: string

                    "desc": 
                      type: string
                    "disclosures": 
                      type: string
                    "discount": 
                      type: integer 
                      example: 0.00,
                    "fontcolor": 
                      type: string 
                    "max_range": 
                      type: number 
                      example: 10000
                    "min_range": 
                      type: number 
                      example: 500
                    "values": 
                      type: string
                      example: "[500, 1000, 5000, 10000]"
                    "is_disabled": 
                      type: boolean
                      example: false
                    logo:
                      type: string
                      format: base64

          multipart/form-data:
            schema:
              type: object
              properties: # Request parts
                data: 
                  type: object
                  properties:
                    # id:
                    #   type: string
                    #   format: uuid
                    "caption": 
                      type: string
                    "color": 
                      type: string

                    "desc": 
                      type: string
                    "disclosures": 
                      type: string
                    "discount": 
                      type: integer 
                      example: 0.00,
                    "fontcolor": 
                      type: string 
                    "max_range": 
                      type: number 
                      example: 10000
                    "min_range": 
                      type: number 
                      example: 500
                    "values": 
                      type: string
                      example: "[500, 1000, 5000, 10000]"
                    "is_disabled": 
                      type: boolean
                      example: false


                logo:
                  type: string
                  format: base64
            encoding: # The same level as schema
              logo: # Property name (see above)
                contentType: image/png, image/jpeg, image/*
      responses:
        "200":
          description: response from updating business giftcards
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null
                      
                  message:
                    type: string
                    example: "updated gift card"
                  errMessage:
                    type: string
                    example: null
          # content:
          #   application/json:
          #     schema:
          # $ref: "#/components/responses/GiftCards"
        "400":
          description: create gift card failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"








  "/api/v1/giftcards/categories":
    get:
      summary: this endpoint returns all available categories for available gift cards
      tags:
        - Giftcards
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           data:
      #             type: object
      #             properties:
      #               "email":
      #                 type: string
      #                 example: "valentine@digiftng.com"
      #               "role":
      #                 type: string
      #                 example: "member"
      #               "team_id":
      #                 type: number
      #                 example: 1
      #             required:
      #               - email
      #               - role
      #               - team_id

      responses:
        "200":
          description: all categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            id: 
                              type: number 
                            title: 
                              type: string 
                            # value: 
                            #   type: string
                            # is_active:
                            #   type: boolean
                            
                  message:
                    type: string
                    example: "All available Gift Card categories"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"





  "/admin/giftcards/categories":
    get:
      summary: this endpoint returns all available categories for available gift cards for admin use
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           data:
      #             type: object
      #             properties:
      #               "email":
      #                 type: string
      #                 example: "valentine@digiftng.com"
      #               "role":
      #                 type: string
      #                 example: "member"
      #               "team_id":
      #                 type: number
      #                 example: 1
      #             required:
      #               - email
      #               - role
      #               - team_id

      responses:
        "200":
          description: all categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            id: 
                              type: number 
                            title: 
                              type: string 
                            "created_by": 
                              type: object
                              properties:
                                "id": 
                                  type: integer
                                "email": 
                                  type: string
                                "role": 
                                  type: string
                                "status": 
                                  type: string
                                  example: active
                
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  "caption":
                                    type: string
                                  code:
                                    type: 
                                      string

                            # value: 
                            #   type: string
                            # is_active:
                            #   type: boolean
                            
                  message:
                    type: string
                    example: "All available Gift Card categories"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/admin/giftcards/category":
    post:
      summary: this endpoint allows admin to create category
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "title":
                      type: string
                  required:
                    - title

      responses:
        "200":
          description: created category
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      category:
                        # type: array
                        # items:
                        type: object
                        properties:
                          id: 
                            type: number 
                          title: 
                            type: string 
                          is_active: 
                            type: boolean
                          "created_by": 
                            type: object
                            properties:
                              "id": 
                                type: integer
                              "email": 
                                type: string
                              "role": 
                                type: string
                              "status": 
                                type: string
                                example: active
                          items:
                            type: array
                            example: []
                                
                              # items:
                                # type: object
                                # properties:
                                #   id:
                                #     type: integer
                                #     example: 1
                                #   "caption":
                                #     type: string
                                #   code:
                                #     type: 
                                #       string

                            # value: 
                            #   type: string
                            # is_active:
                            #   type: boolean
                            
                  message:
                    type: string
                    example: "category created"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"



  "/admin/giftcards/category/{:id}":
    patch:
      summary: this endpoint allows admin to update category
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        - in: path
          name: id
          schema:
            type: integer
            example: 1
          required: true
          description: Numeric ID of category to update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "title":
                      type: string
                    "is_active":
                      type: boolean


      responses:
        "200":
          description: created category
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            id: 
                              type: number 
                            title: 
                              type: string 
                            
                  message:
                    type: string
                    example: "category updated"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"




  "/admin/giftcards/category-item":
    post:
      summary: this endpoint allows admin to create category items
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "item_name":
                      type: string
                    item_id:
                      type: string
                    category_id:
                      type: string
                  required:
                    - item_id
                    - item_name
                    - category_id

      responses:
        "200":
          description: created category
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      category_items:
                        type: array
                        items:
                          type: object
                          properties:
                            id: 
                              type: number 
                            caption: 
                              type: string 
                            code: 
                              type: string
                          
                            
                  message:
                    type: string
                    example: "category item created"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"



  "/admin/giftcards/category-item/{:id}":
    patch:
      summary: this endpoint allows admin to update category items
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        - in: path
          name: id
          schema:
            type: integer
            example: 1
          required: true
          description: Numeric ID of category item to update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "is_active":
                      type: boolean


      responses:
        "200":
          description: update created category item
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      category_items:
                        type: array
                        items:
                          type: object
                          properties:
                            id: 
                              type: number 
                            caption: 
                              type: string 
                            code: 
                              type: string
                            
                  message:
                    type: string
                    example: "category item updated"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"






  "/admin/business/custom/giftcards":
    get:
      summary: Fetches a list of available giftcards created by business for Admins
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      responses:
        "200":
          $ref: "#/components/responses/GiftCards"

        "400":
          description: fetch gift card failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

    # post:
    #   summary: Create Business giftcards
    #   tags:
    #     - Business
    #   parameters:
    #     - $ref: "#/components/parameters/AccessToken"
    #     - $ref: "#/components/parameters/Client"
    #     - $ref: "#/components/parameters/Uid"
    #     # - in: header
    #     #   name: x-auth-apikey
    #     #   schema:
    #     #     type: string
    #     #     example: sk_live_f9f715e06b9xxxxxxxxxxxxxxx61a73f
    #     #   required: true
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           type: object
    #           properties:
    #              data: 
    #               type: object
    #               properties:
    #                 "caption": 
    #                   type: string
    #                 "color": 
    #                   type: string

    #                 "desc": 
    #                   type: string
    #                 "disclosures": 
    #                   type: string
    #                 "discount": 
    #                   type: integer 
    #                   example: 0.00,
    #                 "fontcolor": 
    #                   type: string 
    #                 "max_range": 
    #                   type: number 
    #                   example: 10000
    #                 "min_range": 
    #                   type: number 
    #                   example: 500
    #                 "values": 
    #                   type: string
    #                   example: "[500, 1000, 5000, 10000]"
    #                 logo:
    #                   type: string
    #                   format: base64

    #       multipart/form-data:
    #         schema:
    #           type: object
    #           properties: # Request parts
    #             data: 
    #               type: object
    #               properties:
    #                 # id:
    #                 #   type: string
    #                 #   format: uuid
    #                 "caption": 
    #                   type: string
    #                 "color": 
    #                   type: string

    #                 "desc": 
    #                   type: string
    #                 "disclosures": 
    #                   type: string
    #                 "discount": 
    #                   type: integer 
    #                   example: 0.00,
    #                 "fontcolor": 
    #                   type: string 
    #                 "max_range": 
    #                   type: number 
    #                   example: 10000
    #                 "min_range": 
    #                   type: number 
    #                   example: 500
    #                 "values": 
    #                   type: string
    #                   example: "[500, 1000, 5000, 10000]"


    #             logo:
    #               type: string
    #               format: base64
    #         encoding: # The same level as schema
    #           logo: # Property name (see above)
    #             contentType: image/png, image/jpeg, image/*
    #   responses:
    #     "200":
    #       description: response from creating business giftcards
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               status:
    #                 type: number
    #                 example: 200
    #               data:
    #                 type: object
    #                 example: null
                      
    #               message:
    #                 type: string
    #                 example: "created gift caqrd"
    #               errMessage:
    #                 type: string
    #                 example: null
    #       # content:
    #       #   application/json:
    #       #     schema:
    #       # $ref: "#/components/responses/GiftCards"
    #     "400":
    #       description: create gift card failed
    #       $ref: "#/components/responses/Error"
    #     "500":
    #       description: server error
    #       $ref: "#/components/responses/Error"



    put:
      summary: Update Business giftcards Details by Admin
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        # - in: header
        #   name: x-auth-apikey
        #   schema:
        #     type: string
        #     example: sk_live_f9f715e06b9xxxxxxxxxxxxxxx61a73f
        #   required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                 data: 
                  type: object
                  properties:
                    "caption": 
                      type: string
                    "color": 
                      type: string

                    "desc": 
                      type: string
                    "disclosures": 
                      type: string
                    "discount": 
                      type: integer 
                      example: 0.00,
                    "fontcolor": 
                      type: string 
                    "max_range": 
                      type: number 
                      example: 10000
                    "min_range": 
                      type: number 
                      example: 500
                    "values": 
                      type: string
                      example: "[500, 1000, 5000, 10000]"
                    "is_active":
                      type: boolean
                    is_disabled:
                      type: boolean
                    logo:
                      type: string
                      format: base64

          multipart/form-data:
            schema:
              type: object
              properties: # Request parts
                data: 
                  type: object
                  properties:
                    # id:
                    #   type: string
                    #   format: uuid
                    "caption": 
                      type: string
                    "color": 
                      type: string
                    "desc": 
                      type: string
                    "disclosures": 
                      type: string
                    "discount": 
                      type: integer 
                      example: 0.00,
                    "fontcolor": 
                      type: string 
                    "max_range": 
                      type: number 
                      example: 10000
                    "min_range": 
                      type: number 
                      example: 500
                    "is_active":
                      type: boolean
                    is_disabled:
                      type: boolean
                    "values": 
                      type: string
                      example: "[500, 1000, 5000, 10000]"


                logo:
                  type: string
                  format: base64
            encoding: # The same level as schema
              logo: # Property name (see above)
                contentType: image/png, image/jpeg, image/*
      responses:
        "200":
          description: response from updating business giftcards
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null
                      
                  message:
                    type: string
                    example: "updated gift card"
                  errMessage:
                    type: string
                    example: null
          # content:
          #   application/json:
          #     schema:
          # $ref: "#/components/responses/GiftCards"
        "400":
          description: create gift card failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"










  "/admin/fxrates/{fx_id}":
    patch:
      summary: Update FX rate by Admin
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        - in: path
          name: fx_id
          schema:
            type: integer
            example: 1
          required: true
          description: Numeric ID of fx_rate to update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rate:
                  type: number
                  example: 585
                "exchange_rate":
                  type: number
                  example: 585
              required:
                - "rate"
                - "exchange_rate"

      responses:
        "200":
          description: fx_rates for admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      fx_rate:
                        type: array
                        items:
                          type: object
                          properties:
                            "__type":
                              type: string
                              example: "fx:#"
                            "currency":
                              type: string
                              example: "ngn"
                            "currency_symbol":
                              type: string
                              example: "₦"
                            "iso":
                              type: string
                              example: "ng"
                            "rate":
                              type: string
                              example: "1.0"
                            "exchange_rate":
                              type: string
                              example: "1.0"
                  message:
                    type: string
                    example: "updated fx_rate"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: team member registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/admin/fxrates":
    get:
      summary: Fetch FX rate for Admin
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           rate:
      #             type: number
      #             example: 585
      #           "exchange_rate":
      #             type: number
      #             example: 585
      #     required:
      #     - rate
      #     - "exchange_rate"

      responses:
        "200":
          description: fx_rates for admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      fx_rate:
                        type: array
                        items:
                          type: object
                          properties:
                            "__type":
                              type: string
                              example: "fx:#"
                            "currency":
                              type: string
                              example: "ngn"
                            "currency_symbol":
                              type: string
                              example: "₦"
                            "iso":
                              type: string
                              example: "ng"
                            "rate":
                              type: string
                              example: "1.0"
                            "exchange_rate":
                              type: string
                              example: "1.0"
                  message:
                    type: string
                    example: "all current  fx_rates on the platform"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: team member registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/admin/fxrates/history":
    get:
      summary: Fetch FX rates for Admin
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to goto, default is 1
        - in: query
          name: per_page
          schema:
            type: integer
          description: The numbers of items to return
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           rate:
      #             type: number
      #             example: 585
      #           "exchange_rate":
      #             type: number
      #             example: 585
      #     required:
      #     - rate
      #     - "exchange_rate"

      responses:
        "200":
          description: fx_rates history for admin
          headers:
            total:
              schema:
                type: integer
              description: total number of records.
            page_count:
              schema:
                type: integer
              description: total pages.
            "per_page": 
              schema: 
                type: number
                example: 25
              description: total items per page.
            "current_page":
              schema: 
                type: number
                example: 1
              description: current page.
            "next_page": 
              schema:
                type: number
              description: next page.
            "prev_page": 
              schema:
                type: number
              description: previous page.
            "first_page": 
              schema:
                type: boolean
                example: true
              description: is true if current page is the first page. 
            "last_page": 
              schema:
                type: boolean
                example: false
              description: is true if current page is the last page. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      fx_rate:
                        type: object
                        properties:
                          "total":
                            type: number 
                            example: 1
                          "page_count": 
                            type: number
                            example: 1
                          "per_page": 
                            type: number
                            example: 25
                          "current_page": 
                            type: number
                            example: 1
                          "next_page": 
                            type: number
                          "prev_page": 
                            type: number
                          "first_page": 
                            type: boolean
                          "last_page": 
                            type: boolean
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                "id":
                                  type: string
                                  example: 1
                                "current_exchange_rate":
                                  type: string
                                  example: "585.0"
                                "created_at":
                                  type: string
                                  example: "2022-01-21T11:00:56.663Z"
                                "admin":
                                  type: string
                                  example: "example@email.com"

                  message:
                    type: string
                    example: "fx_rates history"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: team member registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

    post:
      summary: Creats FX rate by Admin
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rate:
                  type: number
                  example: 585
                "exchange_rate":
                  type: number
                  example: 585
                currency:
                  type: string
                  example: "ngn"
                "currency_symbol":
                  type: string
                  example: ₦
                "isol":
                  type: string
                  example: ng
                "is_active":
                  type: boolean
                  example: true
                "is_public":
                  type: boolean
                  example: true
              required:
                - rate
                - "exchange_rate"

      responses:
        "200":
          description: fx_rates for admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null
                  message:
                    type: string
                    example: "created fx_rate"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: team member registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  # "/admin/transactions":
  #   get:
  #     summary: Fetch FX rates for Admin
  #     tags:
  #       - Admin
  #     parameters:
  #       - $ref: "#/components/parameters/AccessToken"
  #       - $ref: "#/components/parameters/Client"
  #       - $ref: "#/components/parameters/Uid"
  #       - in: query
  #         name: page
  #         schema:
  #           type: integer
  #         description: The page number to goto, default is 1
  #       - in: query
  #         name: per_page
  #         schema:
  #           type: integer
  #         description: The numbers of items to return
  #     # requestBody:
  #     #   content:
  #     #     application/json:
  #     #       schema:
  #     #         type: object
  #     #         properties:
  #     #           rate:
  #     #             type: number
  #     #             example: 585
  #     #           "exchange_rate":
  #     #             type: number
  #     #             example: 585
  #     #     required:
  #     #     - rate
  #     #     - "exchange_rate"

  #     responses:
  #       "200":
  #         description: fx_rates history for admin
  #         headers:
  #           total:
  #             schema:
  #               type: integer
  #             description: total number of records.
  #           page_count:
  #             schema:
  #               type: integer
  #             description: total pages.
  #           "per_page":
  #             schema:
  #               type: number
  #               example: 25
  #             description: total items per page.
  #           "current_page":
  #             schema:
  #               type: number
  #               example: 1
  #             description: current page.
  #           "next_page":
  #             schema:
  #               type: number
  #             description: next page.
  #           "prev_page":
  #             schema:
  #               type: number
  #             description: previous page.
  #           "first_page":
  #             schema:
  #               type: boolean
  #               example: true
  #             description: is true if current page is the first page.
  #           "last_page":
  #             schema:
  #               type: boolean
  #               example: false
  #             description: is true if current page is the last page.
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: number
  #                   example: 200
  #                 data:
  #                   type: object
  #                   properties:
  #                     fx_rate:
  #                       type: object
  #                       properties:
  #                         "total":
  #                           type: number
  #                           example: 1
  #                         "page_count":
  #                           type: number
  #                           example: 1
  #                         "per_page":
  #                           type: number
  #                           example: 25
  #                         "current_page":
  #                           type: number
  #                           example: 1
  #                         "next_page":
  #                           type: number
  #                         "prev_page":
  #                           type: number
  #                         "first_page":
  #                           type: boolean
  #                         "last_page":
  #                           type: boolean
  #                         data:
  #                           type: array
  #                           items:
  #                             type: object
  #                             properties:
  #                               "id":
  #                                 type: string
  #                                 example: 1
  #                               "current_exchange_rate":
  #                                 type: string
  #                                 example: "585.0"
  #                               "created_at":
  #                                 type: string
  #                                 example: "2022-01-21T11:00:56.663Z"
  #                               "admin":
  #                                 type: string
  #                                 example: "example@email.com"

  #                 message:
  #                   type: string
  #                   example: "fx_rates history"
  #                 errMessage:
  #                   type: string
  #                   example: null
  #       "400":
  #         description: team member registration failed
  #         $ref: "#/components/responses/Error"
  #       "500":
  #         description: server error
  #         $ref: "#/components/responses/Error"

  #   post:
  #     summary: Creats FX rate by Admin
  #     tags:
  #       - Admin
  #     parameters:
  #       - $ref: "#/components/parameters/AccessToken"
  #       - $ref: "#/components/parameters/Client"
  #       - $ref: "#/components/parameters/Uid"
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               rate:
  #                 type: number
  #                 example: 585
  #               "exchange_rate":
  #                 type: number
  #                 example: 585
  #               currency:
  #                 type: string
  #                 example: "ngn"
  #               "currency_symbol":
  #                 type: string
  #                 example: ₦
  #               "isol":
  #                 type: string
  #                 example: ng
  #               "is_active":
  #                 type: boolean
  #                 example: true
  #               "is_public":
  #                 type: boolean
  #                 example: true
  #             required:
  #               - rate
  #               - "exchange_rate"

  #     responses:
  #       "200":
  #         description: fx_rates for admin
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 status:
  #                   type: number
  #                   example: 200
  #                 data:
  #                   type: object
  #                   example: null
  #                 message:
  #                   type: string
  #                   example: "created fx_rate"
  #                 errMessage:
  #                   type: string
  #                   example: null
  #       "400":
  #         description: team member registration failed
  #         $ref: "#/components/responses/Error"
  #       "500":
  #         description: server error
  #         $ref: "#/components/responses/Error"

  "/admin/transactions":
    get:
      summary: Fetch transactions for Admin
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           rate:
      #             type: number
      #             example: 585
      #           "exchange_rate":
      #             type: number
      #             example: 585
      #     required:
      #     - rate
      #     - "exchange_rate"

      responses:
        "200":
          description: transactions for admin
          headers:
            total:
              schema:
                type: integer
              description: total number of records.
            page_count:
              schema:
                type: integer
              description: total pages.
            "per_page":
              schema:
                type: number
                example: 25
              description: total items per page.
            "current_page":
              schema:
                type: number
                example: 1
              description: current page.
            "next_page":
              schema:
                type: number
              description: next page.
            "prev_page":
              schema:
                type: number
              description: previous page.
            "first_page":
              schema:
                type: boolean
                example: true
              description: is true if current page is the first page.
            "last_page":
              schema:
                type: boolean
                example: false
              description: is true if current page is the last page.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      "total":
                        type: number
                        example: 1
                      "page_count":
                        type: number
                        example: 1
                      "per_page":
                        type: number
                        example: 25
                      "current_page":
                        type: number
                        example: 1
                      "next_page":
                        type: number
                      "prev_page":
                        type: number
                      "first_page":
                        type: boolean
                      "last_page":
                        type: boolean
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            "id":
                              type: string
                              example: "ab7f0af5-7795-43e5-b500-3b51e7c7c950"
                            "profile_id":
                              type: integer
                              example: 482313267
                            "log_type":
                              type: string
                              example: "send"
                            "status":
                              "type": string
                              example: "success"
                            "transfer_reference":
                              type: string
                              example: "ea3f721e-a066-4b25-a639-4ed90ffbb82b"
                            "payment_reference":
                              type: string
                              example: "ea3f721e-a066-4b25-a639-4ed90ffbb82b"
                            "customer":
                              type: string
                              example: "example.com"
                            "amount":
                              type: string
                              example: "1000.0"
                            "transaction_rate":
                              type: number
                  message:
                    type: string
                    example: "all transactions on the platform"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: team member registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
        


  "/admin/user/roles":
    get:
      summary: this endpoint returns all roles available to create an Admin user
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           data:
      #             type: object
      #             properties:
      #               "email":
      #                 type: string
      #                 example: "valentine@digiftng.com"
      #               "role":
      #                 type: string
      #                 example: "member"
      #               "team_id":
      #                 type: number
      #                 example: 1
      #             required:
      #               - email
      #               - role
      #               - team_id

      responses:
        "200":
          description: all roles for Admin users
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      roles:
                        type: array
                        items:
                          type: object
                          properties:
                            title: 
                              type: string 
                            value: 
                              type: string
                            is_active:
                              type: boolean
                            
                  message:
                    type: string
                    example: "invite verified"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/admin/send-admin-invite":
    post:
      summary: this endpoint allows an admin to invite an admin member
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "email":
                      type: string
                      example: "valentine@digiftng.com"
                    "role":
                      type: string
                      example: "member"
                  required:
                    - email
                    - role

      responses:
        "200":
          description: invite sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null
                  message:
                    type: string
                    example: "invite sent"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/admin/verify-admin-invite/:invite_code":
    get:
      summary: this endpoint verifies a business team email
      tags:
        - Admin
      parameters:
        # - in: query
        #   name: invite_code
        #   schema:
        #     type: string
        #     example: eb75ad51-d0f4-4514-b734-c4c48891beb7

        - in: path
          name: invite_code
          schema:
            type: string
            example: eb75ad51-d0f4-4514-b734-c4c48891beb7
          required: true
          description: invite code for new admin user
        
        

      responses:
        "200":
          description: invite verify
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      invitee:
                        type: object
                        properties:
                          "id":
                            type: number
                            example: 2
                          "email":
                            type: string
                            example: "example@gmail.com"
                          "role":
                            type: number
                            example: "member"
                  message:
                    type: string
                    example: "invite verified"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

    # post:
    #   summary: Creats FX rate by Admin
    #   tags:
    #     - Admin
    #   parameters:
    #     - $ref: "#/components/parameters/AccessToken"
    #     - $ref: "#/components/parameters/Client"
    #     - $ref: "#/components/parameters/Uid"
    #   requestBody:
    #     content:
    #       application/json:
    #         schema:
    #           type: object
    #           properties:
    #             rate:
    #               type: number
    #               example: 585
    #             "exchange_rate":
    #               type: number
    #               example: 585
    #             currency:
    #               type: string
    #               example: "ngn"
    #             "currency_symbol":
    #               type: string
    #               example: ₦
    #             "isol":
    #               type: string
    #               example: ng
    #             "is_active":
    #               type: boolean
    #               example: true
    #             "is_public":
    #               type: boolean
    #               example: true
    #           required:
    #             - rate
    #             - "exchange_rate"

    #   responses:
    #     "200":
    #       description: fx_rates for admin
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               status:
    #                 type: number
    #                 example: 200
    #               data:
    #                 type: object
    #                 example: null
    #               message:
    #                 type: string
    #                 example: "created fx_rate"
    #               errMessage:
    #                 type: string
    #                 example: null
    #     "400":
    #       description: team member registration failed
    #       $ref: "#/components/responses/Error"
    #     "500":
    #       description: server error
    #       $ref: "#/components/responses/Error"



  "/admin/register/user":
    post:
      summary: Creates an Admin user from invite
      tags:
        - Admin
      parameters: []
      responses:
        "200":
          description: user created
          $ref: "#/components/responses/Registration"
        "400":
          description: personal registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: example@email.com
                password:
                  type: string
                  example: "123456"
                password_confirmation:
                  type: string
                  example: "123456"
                invite_code:
                  type: string
              required:
                - email
                - password
                - password_confirmation
                - invite_code

  "/api/v1/business/team":
    get:
      summary: this endpoint returns a business team
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           data:
      #             type: object
      #             properties:
      #               test_mode:
      #                 type: boolean
      #                 example: true
      #             required:
      #               - test_mode
      responses:
        "200":
          description: currently updated business team member entity wallets
          $ref: "#/components/responses/BusinessTeamDetails"
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"



  "/business/team-member/role":
    get:
      summary: this endpoint returns all roles available to create a business team member 
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           data:
      #             type: object
      #             properties:
      #               "email":
      #                 type: string
      #                 example: "valentine@digiftng.com"
      #               "role":
      #                 type: string
      #                 example: "member"
      #               "team_id":
      #                 type: number
      #                 example: 1
      #             required:
      #               - email
      #               - role
      #               - team_id

      responses:
        "200":
          description: all roles for business team member
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      roles:
                        type: array
                        items:
                          type: object
                          properties:
                            title: 
                              type: string 
                            value: 
                              type: string
                            is_active:
                              type: boolean
                            
                  message:
                    type: string
                    example: "invite verified"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/business/send-team-invite":
    post:
      summary: this endpoint allows a business team admin to invite new member
      tags:
        - Business
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "email":
                      type: string
                      example: "valentine@digiftng.com"
                    "role":
                      type: string
                      example: "member"
                    "team_id":
                      type: number
                      example: 1
                  required:
                    - email
                    - role
                    - team_id

      responses:
        "200":
          description: invite sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null
                  message:
                    type: string
                    example: "invite sent"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/business/verify-team-invite":
    get:
      summary: this endpoint verifies a business team email
      tags:
        - Business
      parameters:
        - in: query
          name: invite_code
          schema:
            type: string
            example: eb75ad51-d0f4-4514-b734-c4c48891beb7
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           data:
      #             type: object
      #             properties:
      #               "email":
      #                 type: string
      #                 example: "valentine@digiftng.com"
      #               "role":
      #                 type: string
      #                 example: "member"
      #               "team_id":
      #                 type: number
      #                 example: 1
      #             required:
      #               - email
      #               - role
      #               - team_id

      responses:
        "200":
          description: invite verify
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      business:
                        type: object
                        properties:
                          "id":
                            type: number
                          "business_name":
                            type: string
                          "profile_id":
                            type: number
                          "industry":
                            type: string
                          "country_of_incorporation":
                            type: string
                          "staff_strength":
                            type: number
                          "registration_status":
                            type: string
                          "role_at_business":
                            type: string
                          "website":
                            type: string
                          "api_key":
                            type: string
                          "test_key":
                            type: string
                          "is_live":
                            type: boolean
                  message:
                    type: string
                    example: "invite verified"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/auth/register/business/team-member":
    post:
      summary: Creates a Business Team  User
      tags:
        - Users
      parameters: []
      responses:
        "200":
          description: user created
          $ref: "#/components/responses/Registration"
        "400":
          description: team member registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                "phone_number":
                  type: string
                  example: "+23470xxxxxxxx"
                email:
                  type: string
                  example: example@email.com
                password:
                  type: string
                  example: "123456"
                password_confirmation:
                  type: string
                  example: "123456"
                first_name:
                  type: string
                  example: Seun
                last_name:
                  type: string
                  example: Ezike
                "invite_code":
                  type: string
                  example: "eb75ad51-d0f4-4514-b734-c4c48891beb7"
              required:
                - email
                - password
                - password_confirmation

  "/api/v1/business/team-member/remove/{memberId}":
    delete:
      summary: Delete Business Team  User Member
      tags:
        - Business
      parameters:
        - in: path
          name: memberId
          schema:
            type: integer
            example: 1
          required: true
          description: Numeric ID of the team business member to get remove
      responses:
        "200":
          description: team member deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null
                  message:
                    type: string
                    example: "business team member removed from team"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: team member registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/business/fxrates":
    post:
      summary: This endpoint returns all available rx_rates for business users
      tags:
        - Business
      # parameters:
      #   - $ref: '#/components/parameters/AccessToken'
      #   - $ref: '#/components/parameters/Client'
      #   - $ref: '#/components/parameters/Uid'
      responses:
        "200":
          description: fx_rates for business
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      fx_rate:
                        type: array
                        items:
                          type: object
                          properties:
                            "__type":
                              type: string
                              example: "fx:#"
                            "currency":
                              type: string
                              example: "ngn"
                            "currency_symbol":
                              type: string
                              example: "₦"
                            "iso":
                              type: string
                              example: "ng"
                            "rate":
                              type: string
                              example: "1.0"
                            "exchange_rate":
                              type: string
                              example: "1.0"

                  message:
                    type: string
                    example: "current fx_rate on the platform"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: team member registration failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                "data":
                  type: object
                  # properties:
                  #   apikey:
                  #     oneOf:
                  #       - type: string
                  #         example: sk_test_22d75183cb6560c51f9a08549b2c897e
                  #       - type: string
                  #         example: sk_live_22d75183cb6560c51f9a08549b2c897e
                  # required:
                  #   - apikey

  "/api/v1/fxrates":
    get:
      summary: This endpoint returns all available rx_rates for retail users
      tags:
        - Users
      # parameters:
      #   - $ref: '#/components/parameters/AccessToken'
      #   - $ref: '#/components/parameters/Client'
      #   - $ref: '#/components/parameters/Uid'
      responses:
        "200":
          description: fx_rates for retailers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      fx_rate:
                        type: array
                        items:
                          type: object
                          properties:
                            "__type":
                              type: string
                              example: "fx:#"
                            "currency":
                              type: string
                              example: "ngn"
                            "currency_symbol":
                              type: string
                              example: "₦"
                            "iso":
                              type: string
                              example: "ng"
                            "rate":
                              type: string
                              example: "1.0"
                            "exchange_rate":
                              type: string
                              example: "1.0"

                  message:
                    type: string
                    example: "current fx_rate on the platform"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user error
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           "data":
      #             type: object
      #             properties:
      #               apikey:
      #                 oneOf:
      #                   - type: string
      #                     example: sk_test_22d75183cb6560c51f9a08549b2c897e
      #                   - type: string
      #                     example: sk_live_22d75183cb6560c51f9a08549b2c897e
      #             required:
      #               - apikey

  "/auth/confirmation":
    post:
      summary: this endpoint allows user to request for an email confirmation
      tags:
        - Users
      # parameters:
      #   - in: path
      #     name: memberId
      #     schema:
      #       type: integer
      #       example: 1
      #     required: true
      #     description: Numeric ID of the team business member to get remove
      responses:
        "200":
          description: new confirmation email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    example: null
                  message:
                    type: string
                    example: "An email has been sent to 'example@mail.com' containing instructions for confirming your account."
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user email confirmation failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                "email":
                  type: string
                  example: "example@mail.com"
              required:
                - email

  "/admin_auth/sign_in":
    post:
      summary: Sign in Admin
      tags:
        - Admin
      parameters: []
      responses:
        "200":
          description: this is the endpoint to login a User, please add the return headers to your subsequent
          $ref: "#/components/responses/Login"
          headers:
            access-token:
              schema:
                type: string
              description: access-token for making request from the webapp.
            client:
              schema:
                type: string
              description: this is the client browser.
            uid:
              schema:
                type: string
              description: this is the uid for the currently logged in user.
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/cart":
    get:
      summary: this endpoint gets a retail user's cart
      tags:
        - Retail
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      responses:
        "200":
          description: cart for user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      "cart":
                        type: object
                        properties:
                          "id":
                            type: string
                            example: "24d250c8-4e21-4ff7-af81-babc54d4ef10"
                          "cart_items":
                            type: array
                            items:
                              type: object
                              properties:
                                "id":
                                  type: string
                                  example: "89ddc64a-1609-47c7-a5c2-1d64a9040ca9"
                                "cart_id":
                                  type: string
                                  example: "24d250c8-4e21-4ff7-af81-babc54d4ef10"
                                "value":
                                  type: number
                                  example: 100
                                "quantity":
                                  type: number
                                  example: 2
                                "card_code":
                                  type: string
                                  example: "062"
                  message:
                    type: string
                    example: "current cart"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/cart/{cart_id}/item":
    post:
      summary: add new item to cart
      tags:
        - Retail
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        - in: path
          name: cart_id
          schema:
            type: string
            example: 89ddc64a-1609-47c7-a5c2-1d64a9040ca9
          required: true
          description: ID of cart_id to add item
      responses:
        "200":
          description: this is the response from adding item to cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    # properties:
                    example: null
                  message:
                    type: string
                    example: "item added to cart"
                  errMessage:
                    type: string
                    example: null

        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "value":
                      type: number
                      example: 50
                    "quantity":
                      type: number
                      example: 1
                    "card_code":
                      type: string
                      example: "063"
                  required:
                    - value
                    - quantity
                    - card_code

  "/api/v1/cart/{cart_id}/item/{cart_item_id}":
    put:
      summary: this endpoint updates a cart item
      tags:
        - Retail
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        - in: path
          name: cart_id
          schema:
            type: string
            example: 89ddc64a-1609-47c7-a5c2-1d64a9040ca9
          required: true
          description: ID of cart_id to add item
        - in: path
          name: cart_item_id
          schema:
            type: string
            example: 89ddc64a-1609-47c7-a5c2-1d64a9040ca9
          required: true
          description: ID of cart_item_id to add item
      responses:
        "200":
          description: this is the response from adding item to cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    # properties:
                    example: null
                  message:
                    type: string
                    example: "item updated"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                "quantity":
                  type: number
                  example: 2
              required:
                - quantity

    delete:
      summary: this endpoint removes a cart item
      tags:
        - Retail
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        - in: path
          name: cart_id
          schema:
            type: string
            example: 89ddc64a-1609-47c7-a5c2-1d64a9040ca9
          required: true
          description: ID of cart_id to add item
        - in: path
          name: cart_item_id
          schema:
            type: string
            example: 89ddc64a-1609-47c7-a5c2-1d64a9040ca9
          required: true
          description: ID of cart_item_id to add item
      responses:
        "200":
          description: this is the response from adding item to cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  data:
                    type: object
                    # properties:
                    example: null
                  message:
                    type: string
                    example: "item removed"
                  errMessage:
                    type: string
                    example: null
        "400":
          description: user logged in failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/purchase/airtime":
    post:
      summary: this is to buy airtime after payment
      tags:
        - Airtime
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack, cart_id is only required for carts
          $ref: "#/components/responses/AirtimeTransactionSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    amount:
                      type: number
                      example: 5000
                    destination:
                      type: string
                      example: "+2347056381256"
                    reference:
                      type: string
                      example: 354tsga-shagav-xjsuwsh-snajkandhs-251jh

  "/api/v1/utility/cabletv/service-type":
    get:
      summary: this endpoint returns all service types for cable tv providers
      tags:
        - Cable Tv
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack,
          $ref: "#/components/responses/ServiceTypeSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/utility/electricity/billers":
    get:
      summary: this endpoint returns all electricity providers
      tags:
        - Electric Bill
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack,
          $ref: "#/components/responses/ElectricityProvidersSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/utility/account/validation":
    post:
      summary: this endpoint validates a users account/smart_card number
      tags:
        - Cable Tv
        - Electric Bill
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack,
          $ref: "#/components/responses/ServiceAccountValidationSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_type:
                  type: string
                  example: dstv
                "account_number":
                  type: string
                  example: "04042404139"

  "/api/v1/utility/cabletv/bouquets":
    post:
      summary: this endpoint returns all cable tv provider bouquets
      tags:
        - Cable Tv
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a success response
          $ref: "#/components/responses/BouquetSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_type:
                  type: string
                  example: dstv

  "/api/v1/utility/cabletv/addons":
    post:
      summary: this endpoint returns all cable tv provider bouquet addons
      tags:
        - Cable Tv
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a success response
          $ref: "#/components/responses/BouquetAddonsSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_type:
                  type: string
                  example: dstv
                "product_code":
                  type: string
                  example: "COMPLE36"

  "/api/v1/utility/cabletv/renewal":
    post:
      summary: this is the renewal for cable tv subscription after payment
      tags:
        - Cable Tv
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack,
          $ref: "#/components/responses/CableTvTransactionSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "total_amount":
                      type: integer
                      example: 2500
                    "product_monthsPaidFor":
                      type: integer
                      example: 1
                    "service_type":
                      type: string
                      example: "dstv"
                    "smartcard_number":
                      type: string
                      example: "1031420508"
                    reference:
                      type: string
                      example: 354tsga-shagav-xjsuwsh-snajkandhs-251jh

  "/api/v1/utility/cabletv/change-subscription":
    post:
      summary: this is the change cable tv subscription after payment
      tags:
        - Cable Tv
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack,
          $ref: "#/components/responses/CableTvTransactionSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "total_amount":
                      type: integer
                      example: 2500
                    "addon_monthsPaidFor":
                      type: string
                      example: ""
                    "addon_code":
                      type: string
                      example: ""
                    "product_code":
                      type: string
                      example: "COMPLE36"
                    "product_monthsPaidFor":
                      type: integer
                      example: 1
                    "service_type":
                      type: string
                      example: "dstv"
                    "smartcard_number":
                      type: string
                      example: "1031420508"
                    reference:
                      type: string
                      example: 354tsga-shagav-xjsuwsh-snajkandhs-251jh

  "/api/v1/utility/electricbill/payment":
    post:
      summary: this is the electricity utility recharge after payment
      tags:
        - Electric Bill
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a reference for paystack,
          $ref: "#/components/responses/ElectricBillTransactionSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "phone":
                      type: string
                      example: 080312345678
                    "amount":
                      type: integer
                      example: 3000
                    "account_number":
                      type: string
                      example: "04042404048"
                    "service_type":
                      type: string
                      example: "ikeja_electric_prepaid"
                    reference:
                      type: string
                      example: 354tsga-shagav-xjsuwsh-snajkandhs-251jh

  "/api/v1/utility/epin/providers":
    get:
      summary: this endpoint returns all e-pin service providers
      tags:
        - E-Pin Service
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a list of e-pin service providers,
          $ref: "#/components/responses/EPinProvidersSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/api/v1/utility/epin/retrieve/bundles":
    post:
      summary: this endpoint retrieves pin bundles
      tags:
        - E-Pin Service
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a list of pin bundles of a particular service_type,
          $ref: "#/components/responses/EPinBundlesSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service_type:
                  type: string
                  example: glo

  "/api/v1/utility/epin/request":
    post:
      summary: this endpoint retrieves pin bundles
      tags:
        - E-Pin Service
      # parameters: []
      responses:
        "200":
          description: this endpoint generates a list of pin bundles of a particular service_type,
          $ref: "#/components/responses/EPinRequestSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    "pin_value":
                      type: number
                      example: 3000
                    "number_of_pins":
                      type: integer
                      example: 3
                    "service_type":
                      type: string
                      example: "glo"
                    reference:
                      type: string
                      example: 354tsga-shagav-xjsuwsh-snajkandhs-251jh

  "/api/v1/promo-count":
    get:
      summary: this is endpoint called to get if current_user is promo winner
      tags:
        - Promo
      # parameters: []
      responses:
        "200":
          description: this response for current promo winner,
          $ref: "#/components/responses/PromoWinnerSuccess"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"
      # requestBody:
      #   content:
      #     application/json:
      #       schema:
      #         type: object
      #         properties:
      #           data:
      #             type: object
      #             properties:
      #               "phone":
      #                 type: string
      #                 example: 080312345678
      #               "amount":
      #                 type: integer
      #                 example: 3000
      #               "account_number":
      #                 type: string
      #                 example: "04042404048"
      #               "service_type":
      #                 type: string
      #                 example: "ikeja_electric_prepaid"
      #               reference:
      #                 type: string
      #                 example: 354tsga-shagav-xjsuwsh-snajkandhs-251jh
  "/admin/customers":
    get:
      summary: The list of customer types on the platform accessible from the admin area
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to goto, default is 1
        - in: query
          name: per_page
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          # description: this endpoint fetches all registered users on the platform,
          $ref: "#/components/responses/AllUsers"

        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

  "/admin/users":
    get:
      summary: The list of users on the platform accessible from the admin area
      tags:
        - Admin
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/Client"
        - $ref: "#/components/parameters/Uid"
      responses:
        "200":
          description: this endpoint fetches all registered users on the platform,
          $ref: "#/components/responses/AllUsers"
        "400":
          description: send failed
          $ref: "#/components/responses/Error"
        "500":
          description: server error
          $ref: "#/components/responses/Error"

components:
  parameters:
    AccessToken:
      name: access-token
      in: header
      example: XxXSrAP8AxiWKEzR_Z2ijA
      schema:
        type: string
      required: true
    Client:
      name: client
      in: header
      example: H3EKqopxAGZbHYer2UDi_Q
      schema:
        type: string
      required: true
    Uid:
      name: uid
      in: header
      example: example@email.com
      schema:
        type: string
      required: true

  requestBodies:
    GiftCards:
      content:
        application/json:
          schema:
            type: object
            properties:
              service:
                type: object

  responses:
    GiftCards:
      description: available giftcards
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              data:
                $ref: "#/components/schemas/GiftCards"
                # type: array
              message:
                type: string
              errMessage:
                type: string

    GiftCards-local:
      description: available giftcards
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              data:
                $ref: "#/components/schemas/GiftCards-local"
                # type: array
              message:
                type: string
              errMessage:
                type: string

    BoughtGiftCards:
      description: gift card
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "action":
                    type: string
                    example: "gift.order"
                  "balance":
                    type: number
                    example: 75075.63,
                  "domain":
                    type: string
                    example: "blinksky.com"
                  "key":
                    type: string
                    example: "62"
                  "count":
                    type: integer
                    example: 1,
                  "discount":
                    type: number
                    example: 0.045,
                  "list":
                    type: array
                    items:
                      type: object
                      properties:
                        "reference":
                          type: string
                          example: https://blinksky.com/redeem/xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                        "sessionid":
                          type: string
                          example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

                  "param":
                    type: string
                    example: "17705551232"
                  "reference":
                    type: string
                    example: "4475160702983693"
                  "status":
                    type: boolean
                    example: true
                  "text":
                    type: string
                    example: "Amazon"
                  "value":
                    type: string
                    example: "100"
              messaage:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    TransactionReference:
      description: this endpoint verifies that a payment was successful
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  reference:
                    type: string
                    example: e2119a17-8fcd-4817-9979-5f6f2d496d97
              message:
                type: string
                example: "this is your transaction reference, please keep it safe"
              errMessage:
                type: string
                example: null

    AirtimeTransactionSuccess:
      description: this endpoint verifies that airtime purchase was successful
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  entity:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            "status":
                              type: string
                              example: "Sent"
                            "destination":
                              type: string
                              example: "+2348109152844"
                  reference_id:
                    type: string
                    example: e2119a17-8fcd-4817-9979-5f6f2d496d97
              message:
                type: string
                example: "airtime purchase was successful"
              errMessage:
                type: string
                example: null

    ServiceTypeSuccess:
      description: this endpoint returns all the service types
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    value:
                      type: string
                    "is_active":
                      type: boolean

              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    ElectricityProvidersSuccess:
      description: this endpoint returns all the service types
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  providers:
                    type: array
                    items:
                      type: object
                      properties:
                        "service_type":
                          type: string
                          example: "jos_electric_postpaid"
                        "shortname":
                          type: string
                          example: "jos electric postpaid"
                        "biller_id":
                          type: number
                          example: 2
                        "product_id":
                          type: number
                          example: 2
                        "name":
                          type: string
                          example: "Jos Postpaid"

              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    EPinProvidersSuccess:
      description: this endpoint returns all the service types
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  providers:
                    type: array
                    items:
                      type: object
                      properties:
                        "service_type":
                          type: string
                          example: "waec"
                        "shortname":
                          type: string
                          example: "waec"
                        "biller_id":
                          type: number
                          example: 21
                        "product_id":
                          type: number
                          example: 31
                        "name":
                          type: string
                          example: "Waec"

              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    EPinRequestSuccess:
      description: this endpoint returns success for E-pin bundle
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "statusCode":
                    type: string
                    example: "0"
                  "transactionStatus":
                    type: string
                    example: "success"
                  "transactionReference":
                    type: number
                    example: 16666859
                  "transactionMessage":
                    type: string
                    example: "Successful pin purchase"
                  "provider_message":
                    type: string
                  pins:
                    type: array
                    items:
                      type: object
                      properties:
                        "instructions":
                          type: string
                          example: "Dial *203*3*YOURPIN# to recharge."
                        "serialNumber":
                          type: number
                          example: "1491224645326"
                        "pin":
                          type: string
                          example: "1290372508463929"
                        "expiresOn":
                          type: string
                          example: "2017-04-06"

              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    EPinBundlesSuccess:
      description: this endpoint returns success for E-pin
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: array
                items:
                  type: object
                  properties:
                    "amount":
                      type: number
                      example: 50
                    "available":
                      type: number
                      example: 1
                    "description":
                      type: string
                      example: "₦50 Airtime"

              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    ServiceAccountValidationSuccess:
      description: this endpoint returns all the service types
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "user":
                    type: object
                    properties:
                      "name":
                        type: string
                        example: "NP NGEMA"
                      "address":
                        oneOf:
                          - type: string
                            example: "6 ABIODUN ODESEYE Shomolu BU"
                          - type: string
                            example: null
                      "outstandingBalance":
                        type: number
                        example: 31829
                      "dueDate":
                        oneOf:
                          - type: string
                            example: "2021-11-20T17:10:41.075+01:00"
                          - type: string
                            example: null
                      "district":
                        oneOf:
                          - type: string
                            example: ""
                          - type: string
                            example: null
                      "accountNumber":
                        oneOf:
                          - type: string
                            example: "04042404139"
                          - type: string
                            example: null
                      "minimumAmount":
                        oneOf:
                          - type: number
                            example: 0
                          - type: integer
                            example: null
                      "rawOutput":
                        type: object
                        properties:
                          "address":
                            type: string
                            example: "6 ABIODUN ODESEYE Shomolu BU"
                          "outstandingAmount":
                            type: integer
                            example: 31829
                          "name":
                            type: string
                            example: "NP NGEMA"
                          accountStatus:
                            oneOf:
                              - type: string
                                example: "OPEN"
                              - type: string
                                example: null
                          "minimumAmount":
                            oneOf:
                              - type: number
                                example: 0
                              - type: integer
                                example: null
                          "customerAccountType":
                            type: string
                            example: "PRIME"
                          "accountNumber":
                            type: string
                            example: "04042404139"
                          "customerDtNumber":
                            type: string
                            example: "007903312"
                          "firstName":
                            type: string
                            example: "Sten"
                          "lastName":
                            type: string
                            example: "Mockett"
                          "customerType":
                            type: string
                            example: "SUD"
                          "invoicePeriod":
                            type: number
                            example: 1
                          "dueDate":
                            type: string
                            example: "2021-12-15T17:10:40.938+01:00"
                          "customerNumber":
                            type: string
                            example: 59815738
                      "errorMessage":
                        type: object
                        example: null
                      "hasDiscount":
                        type: boolean
                        example: true
                      "currentBouquetRaw":
                        type: object
                        properties:
                          "amount":
                            type: number
                            example: 14025
                          "items":
                            type: array
                            items:
                              type: object
                              properties:
                                "code":
                                  type: string
                                  example: "COMPE36"
                                "price":
                                  type: string
                                  example: 6975
                                "name":
                                  type: string
                                  example: DStv Compact Bouquet E36"
                                "description":
                                  type: string
                                  example: "DStv Compact Bouquet E36"
                      "currentBouquet":
                        type: string
                        example: "DStv Compact Bouquet E36 + Asian Add-on + French Touch"

              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    BouquetSuccess:
      description: this endpoint returns all the bouquets
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: array
                items:
                  type: object
                  properties:
                    "availablePricingOptions":
                      type: array
                      items:
                        type: object
                        properties:
                          "monthsPaidFor":
                            type: number
                            example: 1
                          "price":
                            type: number
                            example: 2500
                          "invoicePeriod":
                            type: number
                            example: 1
                    "code":
                      type: string
                      example: "MOVIESCOMPLE36"
                    "name":
                      type: string
                      example: "DStv Compact Plus Movie Bundle Add-on E36"
                    "description":
                      type: string
                      example: " "
              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    BouquetAddonsSuccess:
      description: this endpoint returns all the bouquet addons
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: array
                items:
                  type: object
                  properties:
                    "availablePricingOptions":
                      type: array
                      items:
                        type: object
                        properties:
                          "monthsPaidFor":
                            type: number
                            example: 1
                          "price":
                            type: number
                            example: 25550
                          "invoicePeriod":
                            type: number
                            example: 1
                    "code":
                      type: string
                      example: "PRWFRNSE36"
                    "name":
                      type: string
                      example: "DStv Premium French"
                    "description":
                      type: string
                      example: " "
              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    CableTvTransactionSuccess:
      description: this endpoint verifies that cable tv subscription was successful
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "statusCode":
                    type: string
                    example: "0"
                  "transactionStatus":
                    type: string
                    example: "success"
                  "transactionReference":
                    type: integer
                    example: 14518220
                  "transactionMessage":
                    type: string
                    example: "Cable TV Subcription successful"
                  "baxiReference":
                    type: integer
                    example: 1467485
                  "provider_message":
                    type: string
                    example: "true"
              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    ElectricBillTransactionSuccess:
      description: this endpoint verifies that electricity subscription was successful
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "statusCode":
                    type: string
                    example: "0"
                  "transactionStatus":
                    type: string
                    example: "success"
                  "transactionReference":
                    type: integer
                    example: 14518220
                  "transactionMessage":
                    type: string
                    example: "Payment successful"
                  "tokenCode":
                    type: string
                    example: "03600873271267716521"
                  "tokenAmount":
                    type: integer
                    example: 3000
                  "amountOfPower":
                    type: string
                    example: "3000 kwh"
                  baxiReference:
                    type: string
                    example: 1467888
                  "provider_message":
                    type: string
                    example: ""
              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

    PromoWinnerSuccess:
      description: this response for a valid promo winner
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "count":
                    type: string
                    example: 100
                  "discount":
                    type: string
                    example: "0.5"
                  "title":
                    type: string

              message:
                type: string
                example: "success message"
              errMessage:
                type: string
                example: null

    VerifyTransactionReference:
      description: this endpoint verifies that a payment was successful
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                example: null
              message:
                type: string
                example: "your transaction was successful"
              errMessage:
                type: string
                example: null

    CancelTransactionReference:
      description: this endpoint cancels a payment for giftcard was successful
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                example: null
              message:
                type: string
                example: "this transaction has being abandoned"
              errMessage:
                type: string
                example: null

    Success:
      description: this endpoint return successful
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                example: null
              message:
                type: string
                example: "Success"
              errMessage:
                type: string
                example: null

    Error:
      description: this endpoint return error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: xxx
              data:
                type: string
                example: null
              message:
                type: string
                example: "error"
              errMessage:
                type: string
                example: "this is the error message"

    Registration:
      description: this endpoint return successful registration
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200

              data:
                type: object
                properties:
                  "id":
                    type: number
                    example: 555555132
                  "provider":
                    type: string
                    example: "email"
                  "uid":
                    type: string
                    example: "4a5fd309-fc1f-48c8-9d8b-dfaa1df7c0f7"
                  "allow_password_change":
                    type: boolean
                    example: false
                  "name":
                    type: string
                    example: null
                  "nickname":
                    type: string
                    example: null
                  "image":
                    type: string
                    example: null
                  "email":
                    type: string
                    example: "example@mail.com"
                  "created_at":
                    type: string
                    example: "2021-09-01T13:33:28.478Z"
                  "updated_at":
                    type: string
                    example: "2021-09-01T13:33:28.478Z"
              message:
                type: string
                example: "Welcome example@mail.com, Please check your email to confirm your registration"
              errMessage:
                type: string
                example: null

    Login:
      description: this endpoint return successful login
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "id":
                    type: number
                    example: 555555132
                  "provider":
                    type: string
                    example: "email"
                  "uid":
                    type: string
                    example: "4a5fd309-fc1f-48c8-9d8b-dfaa1df7c0f7"
                  "allow_password_change":
                    type: boolean
                    example: false
                  "name":
                    type: string
                    example: null
                  "nickname":
                    type: string
                    example: null
                  "image":
                    type: string
                    example: null
                  "email":
                    type: string
                    example: "example@mail.com"
                  "created_at":
                    type: string
                    example: "2021-09-01T13:33:28.478Z"
                  "updated_at":
                    type: string
                    example: "2021-09-01T13:33:28.478Z"
              message:
                type: string
                example: "Welcome back ozichukwubobbyezike@gmail.com"
              errMessage:
                type: string
                example: null

    Update:
      description: this endpoint return successful update
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "id":
                    type: number
                    example: 555555132
                  "provider":
                    type: string
                    example: "email"
                  "uid":
                    type: string
                    example: "4a5fd309-fc1f-48c8-9d8b-dfaa1df7c0f7"
                  "allow_password_change":
                    type: boolean
                    example: false
                  "name":
                    type: string
                    example: null
                  "nickname":
                    type: string
                    example: null
                  "image":
                    type: string
                    example: null
                  "email":
                    type: string
                    example: "example@mail.com"
                  "created_at":
                    type: string
                    example: "2021-09-01T13:33:28.478Z"
                  "updated_at":
                    type: string
                    example: "2021-09-01T13:33:28.478Z"
              message:
                type: string
              errMessage:
                type: string
                example: null

    BusinessWalletDetails:
      description: this endpoint return wallet details
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  "wallet":
                    type: array
                    items:
                      type: object
                      properties:
                        "cleared_balance":
                          type: string
                          example: "0.0"
                        "available_balance":
                          type: string
                          example: "0.0"
                        "is_test":
                          type: boolean
                          example: false
                        "profile":
                          type: object
                          properties:
                            "id":
                              type: number
                            "first_name":
                              type: string
                            "last_name":
                              type: string
                            "phone_number":
                              type: string
                            "profile_type":
                              type: string
                            "test_mode":
                              type: boolean

              messaage:
                type: string
                example: "Found example@email.com"
              errMessage:
                type: string

    BusinessTeamDetails:
      description: this endpoint returns business team details
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  team_name:
                    type: string
                    example: "My Team"
                  team_members:
                    type: array
                    items:
                      type: object
                      properties:
                        "role":
                          type: string
                          example: "admin"
                        "business_team":
                          type: object
                          properties:
                            "team_name":
                              type: string
                              example: "My Team"
                        "profile":
                          type: object
                          properties:
                            "id":
                              type: integer
                              example: 482313267
                            "first_name":
                              type: string
                              example: "bobby"
                            "last_name":
                              type: string
                              example: "ezike"
                            "phone_number":
                              type: string
                              example: "07059648295"
                            "profile_type":
                              type: string
                              example: "business"
                            "image":
                              type: string
                              example: null
                            "test_mode":
                              type: string
                              example: true
                            "user":
                              type: object
                              properties:
                                "id":
                                  type: number
                                  example: 555555131
                                "uid":
                                  type: string
                                  example: "ozichukwubobbyezike@gmail.com"
                                "provider":
                                  type: string
                                  example: "email"
                                "email":
                                  type: string
                                  example: "ozichukwubobbyezike@gmail.com"
              messaage:
                type: string
                example: "Found example@email.com"
              errMessage:
                type: string

    UserDetails:
      description: this endpoint returns user details
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              data:
                type: object
                properties:
                  "user":
                    type: object
                    properties:
                      "id":
                        type: integer
                        example: 2345674
                      "provider":
                        type: string
                        example: email
                      "uid":
                        type: string
                        example: "example@mail.com"
                      "email":
                        type: string
                        example: "example@mail.com"

                  "profile":
                    type: object
                    properties:
                      "id":
                        type: number
                      "first_name":
                        type: string
                      "last_name":
                        type: string
                      "phone_number":
                        type: string
                      "profile_type":
                        type: string
                      "test_mode":
                        type: boolean

                  "business":
                    type: object
                    properties:
                      "id":
                        type: number
                      "business_name":
                        type: string
                      "profile_id":
                        type: number
                      "industry":
                        type: string
                      "country_of_incorporation":
                        type: string
                      "staff_strength":
                        type: number
                      "registration_status":
                        type: string
                      "role_at_business":
                        type: string
                      "website":
                        type: string
                      "api_key":
                        type: string
                      "test_key":
                        type: string
                      "is_live":
                        type: boolean

                  "team":
                    type: object
                    properties:
                      "id":
                        type: number
                        example: 1
                      "team_name":
                        type: string
                        example: "My Team"
                  "membership":
                    type: object
                    properties:
                      "role":
                        type: string
                        example: "admin"
                      "business_team":
                        type: object
                        properties:
                          "team_name":
                            type: string
                            example: "My Team"
                      "profile":
                        type: object
                        properties:
                          "id":
                            type: number
                            example: 482313267,
                          "first_name":
                            type: string
                            example: "bobby"
                          "last_name":
                            type: string
                            example: "ezike"
                          "phone_number":
                            type: string
                            example: "07059648295"
                          "profile_type":
                            type: string
                            example: "business"
                          "image":
                            type: string
                            example: null
                          "test_mode":
                            type: boolean
                            example: true
                          "user":
                            type: object
                            properties:
                              "id":
                                type: number
                                example: 555555131
                              "uid":
                                type: string
                                example: "ozichukwubobbyezike@gmail.com"
                              "provider":
                                type: string
                                example: "email"
                              "email":
                                type: string
                                example: "ozichukwubobbyezike@gmail.com"

                  "wallet":
                    type: array
                    items:
                      type: object
                      properties:
                        "cleared_balance":
                          type: string
                          example: "0.0"
                        "available_balance":
                          type: string
                          example: "0.0"
                        "is_test":
                          type: boolean
                          example: false
                        "profile":
                          type: object
                          properties:
                            "id":
                              type: number
                            "first_name":
                              type: string
                            "last_name":
                              type: string
                            "phone_number":
                              type: string
                            "profile_type":
                              type: string
                            "test_mode":
                              type: boolean

              messaage:
                type: string
                example: "Found example@email.com"
              errMessage:
                type: string

    SendGiftCardTransactions:
      headers:
            total:
              schema:
                type: integer
              description: total number of records.
            page_count:
              schema:
                type: integer
              description: total pages.
            "per_page":
              schema:
                type: number
                example: 25
              description: total items per page.
            "current_page":
              schema:
                type: number
                example: 1
              description: current page.
            "next_page":
              schema:
                type: number
              description: next page.
            "prev_page":
              schema:
                type: number
              description: previous page.
            "first_page":
              schema:
                type: boolean
                example: true
              description: is true if current page is the first page.
            "last_page":
              schema:
                type: boolean
                example: false
              description: is true if current page is the last page.
      description: this endpoint returns send gift card
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "total":
                    type: number
                    example: 1
                  "page_count":
                    type: number
                    example: 1
                  "per_page":
                    type: number
                    example: 25
                  "current_page":
                    type: number
                    example: 1
                  "next_page":
                    type: number
                  "prev_page":
                    type: number
                  "first_page":
                    type: boolean
                  "last_page":
                    type: boolean
                  "data":
                    type: array
                    items:
                      type: object
                      properties:
                        "id":
                          type: string
                          example: "a533fd26-96a9-4e49-805c-802f203e1610"
                        "profile_id":
                          type: number
                          example: 482313267
                        "log_type":
                          oneOf:
                            - type: string
                              example: send
                            - type: integer
                              example: 0
                        "status":
                          type: string
                          example: "success"
                        "reference_id":
                          type: string
                          example: "2d931510-d99f-494a-8c67-87feb05e1594"
                        "amount":
                          type: integer
                          nullable: true
                          oneOf:
                            - type: number
                              example: 100.0
                            - type: string
                              example: "100.0"
                        "transaction_rate":
                          type: integer
                          nullable: true
                          oneOf:
                            - type: number
                              example: 100.0
                            - type: string
                              example: "100.0"
                        "created_at":
                          type: string
                          example: "2021-09-06T20:00:53.666Z"
                        "updated_at":
                          type: string
                          example: "2021-09-06T20:00:55.895Z"
                        "orders":
                          type: array
                          items:
                            type: object
                            properties:
                              "id":
                                type: string
                                example: "d457c882-99db-4624-b189-8a457fa80b59"
                              "card_order_id":
                                type: string
                                example: "2d931510-d99f-494a-8c67-87feb05e1594"
                              "amount":
                                nullable: true
                                oneOf:
                                  - type: number
                                    example: 100.0
                                  - type: string
                                    example: "100.0"
                              "total_amount":
                                nullable: true
                                oneOf:
                                  - type: number
                                    example: 100.0
                                  - type: string
                                    example: "100.0"
                              "quantity":
                                type: number
                                example: 1
                              "gift_card_code":
                                type: string
                                example: "62"
                              "order_type":
                                type: string
                                example: "send"
                              "status":
                                type: string
                                example: "success"
                              "created_at":
                                type: string
                                example: "2021-09-06T20:00:55.970Z"
                              "updated_at":
                                type: string
                                example: "2021-09-06T20:00:55.970Z"
              message:
                type: string
              errMessage:
                type: string
                example: null

    UpdateToLive:
      description: this endpoint returns successful update to live
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: object
                properties:
                  "business":
                    type: object
                    properties:
                      "business_name":
                        type: string
                        example: "random business_name"
                      "industry":
                        type: "string"
                      "country_of_incorporation":
                        type: "string"
                      "staff_strength":
                        type: number
                        example: 10
                      "registration_status":
                        type: "string"
                      "role_at_business":
                        type: "string"
                      "website":
                        type: "string"
                      "api_key":
                        type: string
                      "test_key":
                        type: string
                      "is_live":
                        oneOf:
                          - type: boolean
                            example: true
                          - type: boolean
                            example: false

              message:
                type: string
                oneOf:
                  - type: string
                    example: business_name is in currently in live mode
                  - type: string
                    example: business_name is in currently in test mode
              errMessage:
                type: string
                example: null

    AllUsers:
      description: The list of users on the platform accessible from the admin area
      headers:
        total:
          schema:
            type: integer
          description: total number of records.
        page_count:
          schema:
            type: integer
          description: total pages.
        "per_page":
          schema:
            type: number
            example: 25
          description: total items per page.
        "current_page":
          schema:
            type: number
            example: 1
          description: current page.
        "next_page":
          schema:
            type: number
          description: next page.
        "prev_page":
          schema:
            type: number
          description: previous page.
        "first_page":
          schema:
            type: boolean
            example: true
          description: is true if current page is the first page.
        "last_page":
          schema:
            type: boolean
            example: false
          description: is true if current page is the last page.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 200
              data:
                type: array
                items:
                  type: object
                  properties:
                    "total":
                      type: number
                      example: 1
                    "page_count":
                      type: number
                      example: 1
                    "per_page":
                      type: number
                      example: 25
                    "current_page":
                      type: number
                      example: 1
                    "next_page":
                      type: number
                    "prev_page":
                      type: number
                    "first_page":
                      type: boolean
                    "last_page":
                      type: boolean
                    "data":
                      type: array
                      items:
                        type: object
                        properties:
                          "first_name":
                            type: string
                            example: "Inno"
                          "last_name":
                            type: string
                            example: "Onye"
                          "phone_number":
                            type: string
                            example: "123124231543"
                          "email":
                            type: string
                            example: "example.com"
                          "image":
                            type: string
                            example: "fytfcvyhjbgbuhgvyvhjvjhvjh"
                          bvn:
                            type: string
                            example: "12321245673"
                          is_verified:
                            type: boolean
                            example: false
                          last_login:
                            type: string
                            example: "2021-12-05T19:39:04.824Z"
                          last_transaction:
                            type: string
                            example: "2021-12-05T19:39:04.824Z"
              message:
                type: string
                example: "success"
              errMessage:
                type: string
                example: null

  schemas:
    GiftCards:
      type: array
      items:
        type: object
        properties:
          "__type":
            type: string
            example: "item"
          "caption":
            type: string
            example: "Amazon"
          "currency":
            type: string
            example: "USD"
          "data":
            "type": string
            example: "160|5:0.99,10:0.99,15:0.99,20:0.99,25:0.99,30:0.99,35:0.99,40:0.99,45:0.99,50:0.99,55:0.99,60:0.99,65:0.99,|USD"
          "code":
            type: string
            example: "62"
          "color":
            type: string
            example: "#020203"
          "desc":
            type: string
            example: "Amazon.com Gift Cards never expire and can ..."
          "disclosures":
            type: string
            example: ""
          "fontcolor":
            type: string
            example: "#FFB22E"
          "is_variable":
            type: boolean
            example: false
          "iso":
            type: string
            example: "*"
          "logo":
            type: string
            example: "https://blinksky.azureedge.net/4a460f7.jpg"
          "max_range":
            type: integer
            example: 500
          "min_range":
            type: integer
            example: 5
          "sendcolor":
            type: string
            example: "#FFB436"
          "value":
            type: string
            example: "5,10,25,30,50,80,100,150,200,250,300,400,500"

    GiftCards-local:
      type: array
      items:
        type: object
        properties:
          "__type":
            type: string
            example: "item"
          "caption":
            type: string
            example: "Amazon"
          "currency":
            type: string
            example: "USD"
          "data":
            "type": string
            example: "1000|1000:100,2000:100,5000:100,10000:100,15000:100,20000:100,50000|NGN"
          "code":
            type: string
            example: "62"
          "color":
            type: string
            example: "#020203"
          "desc":
            type: string
            example: "Amazon.com Gift Cards never expire and can ..."
          "disclosures":
            type: string
            example: ""
          "fontcolor":
            type: string
            example: "#FFB22E"
          "is_variable":
            type: boolean
            example: false
          "iso":
            type: string
            example: "*"
          "logo":
            type: string
            example: "https://blinksky.azureedge.net/4a460f7.jpg"
          "max_range":
            type: integer
            example: 500
          "min_range":
            type: integer
            example: 5
          "sendcolor":
            type: string
            example: "#FFB436"
          "value":
            type: string
            example: "5,10,25,30,50,80,100,150,200,250,300,400,500"
    # User:
    #   type: object
    #   properties:
    #     id:
    #       type: integer
    #       format: int64
    #     name:
    #       type: string
    #   required:
    #     - id
    #     - name
